plugins {
	id 'java'
	id 'java-library'
	id 'eclipse'
	id 'jacoco'
	id 'org.unbroken-dome.test-sets' version '4.0.0'
	id 'com.bmuschko.docker-remote-api' version '7.0.0'
	// sonarqube plugin
	 id "org.sonarqube" version "3.2.0"
}

group = 'com.examples'
version = '0.0.1-SNAPSHOT'

// Setup JDK 11

sourceCompatibility = 1.11
targetCompatibility = 1.11

/*
 * Set source encoding: UTF-8
 */

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

// Definizione testSet

testSets {
	// dirName permette di cambiare il nome da src/integrationTest/java(resources)
	// in src/it/java(resources)
	integrationTest { dirName = 'it' }
	e2eTest { dirName = 'e2e' }
	bddTest { dirName = 'bdd' }
}

// Richiediamo che gli integrationTest vengano eseguiti sempre, anche quando gli input
// ed output sono gli stessi
project.integrationTest {
    outputs.upToDateWhen { false }
}

project.e2eTest {
	outputs.upToDateWhen { false }
}

project.bddTest {
	outputs.upToDateWhen { false }
}

repositories {
	mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'
    
    // AssertJ framework
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.6.1'
    
    // Mockito dependencies
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.10.0'
	
	// MongoDB dependencies
	implementation group: 'org.mongodb', name: 'mongodb-driver', version: '3.12.8'
	
	// Serve per mostrare in output i logs del mongodb
	implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha5'
	
	// https://mvnrepository.com/artifact/de.bwaldvogel/mongo-java-server
	testImplementation group: 'de.bwaldvogel', name: 'mongo-java-server', version: '1.38.0'
	
	// Aggiunta libreria Testcontainers
	//testImplementation group: 'org.testcontainers', name: 'testcontainers', version: '1.15.3'	
	testImplementation group: 'org.testcontainers', name: 'mongodb', version: '1.15.3'
	
	// AssertJ Swing library for GUI
	testImplementation group: 'org.assertj', name: 'assertj-swing-junit', version: '3.17.1'
	
	// https://mvnrepository.com/artifact/info.picocli/picocli
	implementation group: 'info.picocli', name: 'picocli', version: '4.6.1'
	
	// Cucumber-java plugin
	testImplementation group: 'io.cucumber', name: 'cucumber-java', version: '6.10.4'

	// Cucumber-junit plugin
	testImplementation group: 'io.cucumber', name: 'cucumber-junit', version: '6.10.4'
	


    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'
}

/*
 * CONFIGURATION TASK
 */

jacocoTestReport {
	dependsOn build
	
    reports {
        xml.enabled true
    }
}

// DOCKER TASK

import com.bmuschko.gradle.docker.tasks.container.*
import com.bmuschko.gradle.docker.tasks.image.*

task createMongoContainer(type: DockerCreateContainer) {

	targetImageId 'mongo:4.4.3'
	containerName = 'mongo'
	
	hostConfig.portBindings = ['27017:27017']
	
	def second = 1000 * 1000000
	healthCheck.setInterval((Long)(2 * second))
	healthCheck.setTimeout((Long)(10 * second))
}

task startMongoContainer(type: DockerStartContainer) {
	dependsOn createMongoContainer
	
	targetContainerId createMongoContainer.getContainerId()
}

task stopMongoContainer(type: DockerStopContainer) {
	targetContainerId createMongoContainer.getContainerId()
}

task removeMongoContainer(type: DockerRemoveContainer) {
	dependsOn stopMongoContainer
	
	targetContainerId createMongoContainer.getContainerId()
}

// INTEGRATION TEST TASK

// Dove posizionare l'esecuzione degli IT
check.dependsOn integrationTest, e2eTest, bddTest

integrationTest {
	shouldRunAfter test
	dependsOn startMongoContainer
	
	finalizedBy removeMongoContainer
}

e2eTest {
	shouldRunAfter integrationTest
	dependsOn startMongoContainer
	
	finalizedBy removeMongoContainer
}

bddTest {
	shouldRunAfter e2eTest
	dependsOn startMongoContainer
	
	finalizedBy removeMongoContainer
}

// SONARQUBE

sonarqube {
	
	properties {
		property "sonar.projectName", "Example of SonarQube with Gradle"
		
		property "sonar.sourceEncoding", "UTF-8"
		property "sonar.sources", "src/main/java"
		
		property "sonar.junit.reportPaths", "$project.projectDir/build/test-results"
		property 'sonar.coverage.jacoco.xmlReportPaths', "$project.projectDir/build/reports/jacoco/test/jacocoTestReport.xml"
		
		// Ignore rules
		property "sonar.issue.ignore.multicriteria", "e11, e12, e13"
		
		property "sonar.issue.ignore.multicriteria.e11.ruleKey", "java:S110"
		property "sonar.issue.ignore.multicriteria.e11.resourceKey", "**/*.java"
		
		property "sonar.issue.ignore.multicriteria.e12.ruleKey", "java:S117"
		property "sonar.issue.ignore.multicriteria.e12.resourceKey", "**/StudentSwingView.java"
		
		property "sonar.issue.ignore.multicriteria.e13.ruleKey", "java:S2699"
		property "sonar.issue.ignore.multicriteria.e13.resourceKey", "**/StudentSwingViewTest.java"
	}
}

project.tasks["sonarqube"].dependsOn "jacocoTestReport"
